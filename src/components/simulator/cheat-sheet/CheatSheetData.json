{
    "st": "Statements",
    "st/exp": "Evaluate Single Expression",
    "st/exp/useful": "Useful: e.g. function calls and assignments",
    "st/exp/useless": "Useless: e.g. data & data evaluations",
    "st/dec": "Declaration",
    "st/dec/var": "Declare a Variable (within a scope)",
    "st/dec/assign": "Declare and Assign (initial value)",
    "st/dec/func": "Declare a Named Function",
    "st/dec/class": "Declare a Class",
    "st/cond": "Conditional",
    "st/cond/if": "If",
    "st/cond/else": "Else",
    "st/cond/switch": "Switch",
    "st/loop": "Loop",
    "st/loop/for": "For",
    "st/loop/for/3statements": "3 Statements",
    "st/loop/for/in": "For-in",
    "st/loop/for/of": "For-of",
    "st/loop/while": "While",
    "st/loop/while/standard": "While",
    "st/loop/while/dowhile": "Do-while",
    "st/flow": "Code flow control",
    "st/flow/return": "Return",
    "st/flow/throw": "Throw",
    "st/flow/break": "Break",
    "st/flow/continue": "Continue",
    "st/error": "Error Handling",
    "st/error/trycatch": "Try-Catch",
    "st/error/trycatchfinally": "Try-Catch-Finally",
    "exp": "Expressions",
    "exp/read": "Read Variable",
    "exp/read/var": "From Variable (Closest Scope)",
    "exp/read/prop": "From Property",
    "exp/read/prop/static": "By Static Name",
    "exp/read/prop/dynamic": "By Dynamic Name ( expression ) / array index",
    "exp/write": "Write variable",
    "exp/write/var": "To Variable",
    "exp/write/prop": "To Property",
    "exp/func": "Function call",
    "exp/op": "Operation",
    "exp/op/unary": "Unary",
    "exp/op/binary": "Binary",
    "exp/op/ternary": "Ternary",
    "data": "Data",
    "data/number": "Number",
    "data/boolean": "Boolean",
    "data/string": "String",
    "data/null": "Null",
    "data/undefined": "Undefined",
    "data/object": "New Object",
    "data/array": "New Array",
    "data/function": "New Anonymous Function",
    "data/arrow": "New Arrow Function"
}